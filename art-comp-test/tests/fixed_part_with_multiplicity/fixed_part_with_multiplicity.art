[[rt::decl]]
`
    extern unsigned int incCount;
`

[[rt::impl]]
`
    unsigned int incCount = 0;
`

capsule Top {
    [[rt::impl_preface]]
    `
        #include "testlib.art.h"
        #include "fixed_part_with_multiplicity.art.h"
    `
    service port timer : Timing;
    /* Parts */
    fixed part thePart : C[4]; // Fixed part with multiplicity 4

    /* State Machine */
    statemachine {
        initial -> State 
        `
            // Already when the top capsule initial transition runs, fixed capsule parts have been created
            ASSERT(incCount == 4, "In initial transition, expected 4 capsule instances to have been incarnated in the part");
        `;
        state State {
            entry
            `                                
                timer.informIn(RTTimespec(0,0));
            `;
            timeout: on timer.timeout
            `
                // Of course we should still now have the same 4 instances
                ASSERT(incCount == 4, "After timeout, expected 4 capsule instances to have been incarnated in the part");
                PASS();
            `;
        };
    };
};

capsule C {    
    [[rt::impl_preface]]
    `
        #include "fixed_part_with_multiplicity.art.h"
    `

    /* State Machine */
    statemachine {
        state State;
        initial -> State
        `
            incCount++;
        `
        ;
    };
};