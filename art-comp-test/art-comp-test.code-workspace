{ "folders": [
        {
            "path": "TestUtils"
        },
        {
            "path": "../art-samples/HelloWorld"
        },
        {
            "path": "../art-samples/PiComputer"
        },
        {
            "path": "../art-samples/PingPong"
        },
        {
            "path": "tests/art_0001"
        },
        {
            "path": "tests/art_0002"
        },
        {
            "path": "tests/art_0003"
        },
        {
            "path": "tests/art_0004"
        },
        {
            "path": "tests/art_0005"
        },
        {
            "path": "tests/art_0006"
        },
        {
            "path": "tests/art_0007"
        },
        {
            "path": "tests/art_0008"
        },
        {
            "path": "tests/art_0009"
        },
        {
            "path": "tests/art_0010"
        },
        {
            "path": "tests/art_0011"
        },
        {
            "path": "tests/art_0012"
        },
        {
            "path": "tests/art_0013"
        },
        {
            "path": "tests/art_0014"
        },
		{
            "path": "tests/art_0015"
        },
		{
            "path": "tests/art_0016"
        },
		{
            "path": "tests/art_0017"
        },
		{
            "path": "tests/art_0018"
        },
		{
            "path": "tests/art_0019"
        },
		{
            "path": "tests/art_0020"
        },
		{
            "path": "tests/art_0021"
        },
		{
            "path": "tests/art_0022"
        },
		{
            "path": "tests/art_0023"
        },
		{
            "path": "tests/art_0024"
        },
		{
            "path": "tests/art_0025"
        },
		{
            "path": "tests/art_0026"
        },
		{
            "path": "tests/art_0027"
        },
		{
            "path": "tests/art_0028"
        },
		{
            "path": "tests/art_0029"
        },
		{
            "path": "tests/art_0030"
        },
		{
            "path": "tests/art_0031"
        },
		{
            "path": "tests/art_0032"
        },
		{
            "path": "tests/art_0033"
        },
		{
            "path": "tests/art_0034"
        },
		{
            "path": "tests/art_0035"
        },
        {
            "path": "tests/build_variants"
        },
        {
            "path": "tests/capsule_constructor"
        },
        {
            "path": "tests/capsule_cpp_inheritance"
        },
        {
            "path": "tests/capsule_factory_for_part"
        },
        {
            "path": "tests/choice_and_junction"
        },
        {
            "path": "tests/choice_guard_exclude"
        },
        {
            "path": "tests/choice_guard_redefinition"
        },
        {
            "path": "tests/choice_inheritance"
        },
        {
            "path": "tests/choice_transition_exclude"
        },
        {
            "path": "tests/composite_state_entry_exit_guards"
        },
        {
            "path": "tests/composite_state_process_history"
        },
        {
            "path": "tests/compound_transition_rtdata"
        },
        {
            "path": "tests/compound_transition_rtdata_inherited"
        },
        {
            "path": "tests/compound_transition_rtdata_junction"
        },
        {
            "path": "tests/deep_history"
        },
        {
            "path": "tests/duplicated_effect_and_guard"
        },
        {
            "path": "tests/entry_exit_action"
        },
        {
            "path": "tests/enum_type_descriptor"
        },
        {
            "path": "tests/enum_type_descriptor_custom_encode"
        },
        {
            "path": "tests/enum_type_descriptor_manual"
        },
        {
            "path": "tests/fixed_part_with_multiplicity"
        },
        {
            "path": "tests/internal_transition_receive_any"
        },
        {
            "path": "tests/local_binding"
        },
        {
            "path": "tests/local_transition"
        },
        {
            "path": "tests/optional_part"
        },
        {
            "path": "tests/part_inheritance"
        },
        {
            "path": "tests/protocol_inheritance"
        },
        {
            "path": "tests/protocol_inheritance_redefined_event"
        },
        {
            "path": "tests/rule_config"
        },
        {
            "path": "tests/struct_type_descriptor"
        },
        {
            "path": "tests/struct_type_descriptor_nested"
        },
        {
            "path": "tests/tc_sources"
        },
        {
            "path": "tests/tc_user_libraries"
        },
        {
            "path": "tests/threads"
        },
        {
            "path": "tests/transition_inheritance"
        },
        {
            "path": "tests/type_descriptor_inheritance"
        },
        {
            "path": "tests/typedef_type_descriptor"
        }
    ]
}
